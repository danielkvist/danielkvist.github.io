<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dkvist</title>
    <link>/</link>
    <description>Recent content on Dkvist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Finding dead links in a Website with Go</title>
      <link>/posts/findind-dead-links-with-golang/</link>
      <pubDate>Thu, 19 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/findind-dead-links-with-golang/</guid>
      <description>First things first The idea behind this article comes from my experience building Kelsier, which idea itself comes from this article.
The code that I&amp;rsquo;m going to show below is very likely to have and will have aspects that can be improved. So please, if you see something you don&amp;rsquo;t think is entirely ideal or there&amp;rsquo;s something you know can be done in a better way, let me know by opening an issue in the repository of this site.</description>
    </item>
    
    <item>
      <title>Doubly linked lists in Go</title>
      <link>/posts/doubly-linked-lists-golang/</link>
      <pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/doubly-linked-lists-golang/</guid>
      <description>What is a Doubly linked list Like Linked lists, Doubly linked lists are a very simple data structure whose definition from Wikipedia is:
 A Doubly linked list is a linked data structure that consists of a set of sequentially linked records called nodes. Each Node contains three fields: two link fields (references to the previous and to the next Node in the sequence of nodes) and one data field.</description>
    </item>
    
    <item>
      <title>Linked lists in Go</title>
      <link>/posts/linked-lists-golang/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/linked-lists-golang/</guid>
      <description>What is a Linked list Linked lists are one of the most simpler and basic data structures which are defined by the Wikipedia as follows:
 A Linked list is a linear collection of data elements, whose order is not given by their physical placement in memory. Instead, each element points to the next. It is a data structure consisting of a collection of nodes which together represent a sequence.</description>
    </item>
    
    <item>
      <title>Hello world</title>
      <link>/posts/hello-world/</link>
      <pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/hello-world/</guid>
      <description>Who I am Well, the truth is, I&amp;rsquo;m a person who doesn&amp;rsquo;t like to repeat myself too much. So I&amp;rsquo;ll leave here the link to the page where I have already written about who I am.
What I am going to talk about I&amp;rsquo;m going to write about almost everything. But above all, about software development, Go and myself. I know it doesn&amp;rsquo;t sound very interesting or very original. But well, I didn&amp;rsquo;t say it&amp;rsquo;s going to be either.</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Hello there If you&amp;rsquo;re reading this I guess it&amp;rsquo;s because you&amp;rsquo;ve asked yourself the same question that I&amp;rsquo;ve sometimes asked myself at 3 o&amp;rsquo;clock in the morning: &amp;ldquo;Who am I?&amp;rdquo;. And although the answer to such questions is always complicated, I will try to answer as simply as possible.
Who I am now, right now I&amp;rsquo;m a 25-year-old boy who has decided that his next job is going to be as a developer.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/contact/</guid>
      <description>To contact me you can send me an email to: danielkvist@protonmail.com.
Every morning and evening I check the mail so you can expect an answer from me every day in that time frame.
If you have had any problems or have any suggestions for the different projects I have in my GitHub please do not send me an email. Open a new issue in the correspondent repository.</description>
    </item>
    
    <item>
      <title>Making a very simple Telegram bot with Golang</title>
      <link>/posts/simple-telegram-bot-with-golang/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/simple-telegram-bot-with-golang/</guid>
      <description> First things first What is Telegram What is a Telegram bot Why we would want to write a Telegram bot How to get a Telegram token Building our Telegram bot Server and client Handling messages Sending back a response Sending back multiple responses Our final code Optional steps Useful links </description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/</guid>
      <description>Here is a list with my most recent projects. You can find the rest of them in my GitHub account.
Botio - CLI for different bots platforms Botio is a simple and opinionated CLI to create and manage easily bots for different platforms. It allows the user to create easily a server with a REST API to manage a list of commands that then, clients such as a Telegram bot can use to reply to users of that bot.</description>
    </item>
    
  </channel>
</rss>